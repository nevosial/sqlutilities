desc TABLE_NAME  //Will give the data types for colomns in the table.

//To find data after a specific datetime.
select * from TABLE_NAME where resolved_time >= to_date('28/MAR/2017 18:00:00', 'dd/mm/yyyy hh24:mi:ss')

//To find data after a specific date and matching criteria
select m1."NUMBER", m1.problem_status from TABLE_NAME m1
where resolved_time >= to_date('27/FEB/2017 18:00:00', 'dd/mm/yyyy hh24:mi:ss') and m1.resolved_by NOT LIKE 'wseventin_nev%'

//To find data for NULLS
select n."NUMBER", n.assignment, n.resolved_group
from TABLE_NAME n
where
n.problem_status = 'Resolved' and
n.resolved_time >= to_date('24/MAR/2017 18:00:00', 'dd/mm/yyyy hh24:mi:ss') and
n.resolved_by LIKE 'wseventin_tos%' and
n.resolved_group is NULL

//To find data where columns are in different table
select n."NUMBER" , n.assignment , m.CUSTOMFIELD
from TABLE_NAME n , probsummarym2 m
where
n.problem_status = "Resolved" and
m.CUSTOMFIELD is NOT NULL

//Update queries
UPDATE PROBSUMMARYM1 SET CLOSE_TIME=RESOLVED_TIME+ INTERVAL '7' DAY WHERE (PROBLEM_STATUS='CLOSED' AND CLOSE_TIME IS NULL AND RESOLVED_TIME IS NOT NULL)
UPDATE PROBSUMMARYM1 m1 SET RESOLVED_GROUP='ABCD' where m1."NUMBER" in ('KET1','KET2')

**Always follow an update statement with a commit.**

//Update strategy.
- Run update on the numbers acquired from the select.
- Run in batches of 1000.
- Backup : DB / only tickets backup via application in batches.
